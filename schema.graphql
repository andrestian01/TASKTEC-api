# schema.graphql
type User {
  id: ID!
  username: String!
  createdAt: String!
  updatedAt: String!
}

type AuthPayload {
  token: String!
  user: User!
}

type Task {
  id: ID!
  title: String!
  description: String!
  deadline: String!
  completed: Boolean!
  timeTaken: Int!
  createdAt: String!
  completedAt: String!
  category: String!
  userId: ID!
}

type Query {
  tasks: [Task!]!
  filterTasksByTitle(title: String!): [Task!]!
}

type Mutation {
  register(username: String!, password: String!): AuthPayload!
  login(username: String!, password: String!): AuthPayload!
  addTask(title: String!, description: String!, deadline: String!, category: String!): Task!
  updateTaskStatus(id: ID!, completed: Boolean!): Task!
   updateTask(id: ID!, title: String!, description: String!, deadline: String!, completed: Boolean!, timeTaken: Int!, category: String!): Task!
  deleteTask(id: ID!): Task!
}

type Subscription {
  taskAdded: Task
  taskDeleted: Task
}
